plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

jar {
	manifest {
		attributes 'Main-Class': 'com.minsub.sample.jar.Main'
	}
	from {
		configurations.compile.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test'){
		exclude group: 'org.junit.vingate', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

configure(rootProject) {
	apply plugin: 'io.spring.dependency-management'
	dependencies {
		implementation "com.querydsl:querydsl-jpa"
		implementation "com.querydsl:querydsl-core"
		// querydsl JPAAnnotationProcessor 사용 지정
		annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
	}
	// querydsl
	def querydslSrcDir = "$buildDir/generated/querydsl"
	sourceSets {
		main.java.srcDirs += [querydslSrcDir]
	}
	tasks.withType(JavaCompile) {
		options.incremental = false
		options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
	}
	clean.doLast {
		file(querydslSrcDir).deleteDir()
	}
}